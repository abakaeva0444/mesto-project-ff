/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ 674:
/***/ (() => {

eval("\n;// ./src/components/card.js\nfunction createCard(cardData, userId, handleDeleteCard, handleCardClick, handleLikeClick, cardTemplate) {\n  var cardElement = cardTemplate.cloneNode(true);\n  var cardImage = cardElement.querySelector(\".card__image\");\n  var cardTitle = cardElement.querySelector(\".card__title\");\n  var deleteButton = cardElement.querySelector(\".card__delete-button\");\n  var likeButton = cardElement.querySelector(\".card__like-button\");\n  var likeCountElement = cardElement.querySelector(\".card__like-count\");\n  cardImage.src = cardData.link;\n  cardImage.alt = cardData.name;\n  cardTitle.textContent = cardData.name;\n\n  // Устанавливаем количество лайков\n  likeCountElement.textContent = cardData.likes.length;\n\n  // Проверяем, есть ли лайк пользователя на этой карточке\n  var isLiked = cardData.likes.some(function (like) {\n    return like._id === userId;\n  });\n\n  //Устанавливаем начальное состояние лайка\n  if (isLiked) {\n    likeButton.classList.add(\"card__like-button_is-active\");\n  } else {\n    likeButton.classList.remove(\"card__like-button_is-active\");\n  }\n  if (cardData.owner._id !== userId) {\n    if (deleteButton) {\n      deleteButton.remove();\n    }\n  }\n\n  // Слушатель клика на кнопку лайка\n  likeButton.addEventListener(\"click\", function () {\n    handleLikeClick(cardData._id, isLiked, likeButton, likeCountElement);\n  });\n  if (deleteButton) {\n    deleteButton.addEventListener(\"click\", function () {\n      handleDeleteCard(cardElement, cardData._id);\n    });\n  }\n  cardImage.addEventListener(\"click\", function () {\n    handleCardClick(cardData.link, cardData.name);\n  });\n  return cardElement;\n}\n;// ./src/components/modal.js\n// Функция открытия модального окна\nfunction openModal(modal) {\n  if (modal) {\n    modal.classList.add(\"popup_opened\");\n    document.addEventListener(\"keydown\", handleEscClose);\n  }\n}\n\n// Функция закрытия модального окна\nfunction closeModal(modal) {\n  if (modal) {\n    modal.classList.remove(\"popup_opened\");\n    document.removeEventListener(\"keydown\", handleEscClose);\n  }\n}\n\n// Функция закрытия модального окна по нажатию ESC\nfunction handleEscClose(evt) {\n  if (evt.key === \"Escape\") {\n    var openedPopup = document.querySelector(\".popup_opened\");\n    if (openedPopup) {\n      closeModal(openedPopup);\n    }\n  }\n}\n;// ./src/components/validation.js\nfunction isValidURL(url) {\n  try {\n    new URL(url);\n    return true;\n  } catch (_) {\n    return false;\n  }\n}\nfunction showInputError(formElement, inputElement, errorMessage, options) {\n  var errorElement = formElement.querySelector(\".\".concat(inputElement.name, \"-input-error\"));\n\n  // Проверяем на несоответствие паттерну\n  if (inputElement.validity.patternMismatch) {\n    errorMessage = inputElement.dataset.errorMessage; // Получаем сообщение из data-атрибута\n  }\n  inputElement.classList.add(options.inputErrorClass);\n  errorElement.textContent = errorMessage;\n  errorElement.classList.add(options.errorClass);\n}\nfunction hideInputError(formElement, inputElement, options) {\n  var errorElement = formElement.querySelector(\".\".concat(inputElement.name, \"-input-error\"));\n  inputElement.classList.remove(options.inputErrorClass);\n  errorElement.classList.remove(options.errorClass);\n  errorElement.textContent = \"\";\n}\nfunction hasInvalidInput(inputList) {\n  return inputList.some(function (inputElement) {\n    return !inputElement.validity.valid;\n  });\n}\nfunction toggleButtonState(inputList, buttonElement, options) {\n  if (hasInvalidInput(inputList)) {\n    buttonElement.classList.add(options.inactiveButtonClass);\n    buttonElement.setAttribute(\"disabled\", true);\n  } else {\n    buttonElement.classList.remove(options.inactiveButtonClass);\n    buttonElement.removeAttribute(\"disabled\");\n  }\n}\nfunction enableValidation(options) {\n  var formList = Array.from(document.querySelectorAll(options.formSelector)); // Находим все формы\n\n  formList.forEach(function (formElement) {\n    var inputList = Array.from(formElement.querySelectorAll(options.inputSelector));\n    var buttonElement = formElement.querySelector(options.submitButtonSelector);\n    toggleButtonState(inputList, buttonElement, options);\n    inputList.forEach(function (inputElement) {\n      inputElement.addEventListener(\"input\", function () {\n        if (!inputElement.validity.valid) {\n          showInputError(formElement, inputElement, inputElement.validationMessage, options);\n        } else {\n          hideInputError(formElement, inputElement, options);\n        }\n        toggleButtonState(inputList, buttonElement, options);\n      });\n    });\n    formElement.addEventListener(\"reset\", function () {\n      // Вешаем слушатель reset\n      setTimeout(function () {\n        resetValidation(formElement, options);\n      }, 0);\n    });\n  });\n}\nfunction resetValidation(formElement, options) {\n  var inputList = Array.from(formElement.querySelectorAll(options.inputSelector));\n  var buttonElement = formElement.querySelector(options.submitButtonSelector);\n  inputList.forEach(function (inputElement) {\n    hideInputError(formElement, inputElement, options);\n  });\n  toggleButtonState(inputList, buttonElement, options);\n}\n\n;// ./src/components/api.js\nvar config = {\n  baseUrl: \"https://mesto.nomoreparties.co/v1/wff-cohort-35\",\n  headers: {\n    authorization: \"dccd93c3-3130-443a-adf6-e0be847312a2\",\n    \"Content-Type\": \"application/json\"\n  }\n};\n\n// Функция для проверки ответа сервера\nvar checkResponse = function checkResponse(res) {\n  if (!res.ok) {\n    return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));\n  }\n  return res.json();\n};\n\n// Функция для получения информации о пользователе\nvar getUserInfo = function getUserInfo() {\n  return fetch(\"\".concat(config.baseUrl, \"/users/me\"), {\n    headers: config.headers\n  }).then(checkResponse);\n};\n\n// Функция для обновления информации о пользователе\nvar updateUserInfo = function updateUserInfo(userData) {\n  return fetch(\"\".concat(config.baseUrl, \"/users/me\"), {\n    method: \"PATCH\",\n    headers: config.headers,\n    body: JSON.stringify(userData)\n  }).then(checkResponse);\n};\n\n// Функция для обновления аватара пользователя\nvar updateAvatar = function updateAvatar(avatarLink) {\n  return fetch(\"\".concat(config.baseUrl, \"/users/me/avatar\"), {\n    method: \"PATCH\",\n    headers: config.headers,\n    body: JSON.stringify({\n      avatar: avatarLink\n    })\n  }).then(checkResponse);\n};\n\n// Функция для получения карточек с сервера\nvar getInitialCards = function getInitialCards() {\n  return fetch(\"\".concat(config.baseUrl, \"/cards\"), {\n    headers: config.headers\n  }).then(checkResponse);\n};\n\n// Функция для добавления новой карточки\nvar addCard = function addCard(cardData) {\n  return fetch(\"\".concat(config.baseUrl, \"/cards\"), {\n    method: \"POST\",\n    headers: config.headers,\n    body: JSON.stringify(cardData)\n  }).then(checkResponse);\n};\n\n// Функция для удаления карточки\nvar deleteCard = function deleteCard(cardId) {\n  return fetch(\"\".concat(config.baseUrl, \"/cards/\").concat(cardId), {\n    method: \"DELETE\",\n    headers: config.headers\n  }).then(checkResponse);\n};\n\n// Функция для постановки/снятия лайка\nvar toggleLike = function toggleLike(cardId, isLiked) {\n  var method = isLiked ? \"DELETE\" : \"PUT\";\n  return fetch(\"\".concat(config.baseUrl, \"/cards/likes/\").concat(cardId), {\n    method: method,\n    headers: config.headers\n  }).then(checkResponse);\n};\n;// ./src/components/index.js\nfunction _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(r) { if (Array.isArray(r)) return r; }\n\n\n\n\n\n\n// профиль\nvar profileEditButton = document.querySelector(\".profile__edit-button\");\nvar profileTitle = document.querySelector(\".profile__title\");\nvar profileDescription = document.querySelector(\".profile__description\");\nvar profileImage = document.querySelector(\".profile__image\");\nvar profileAddButton = document.querySelector(\".profile__add-button\");\n\n// попапы\nvar popupEditProfile = document.querySelector(\".popup_type_edit\");\nvar popupAddCard = document.querySelector(\".popup_type_new-card\");\nvar popupEditAvatar = document.querySelector(\".popup_type_edit-avatar\");\nvar popupImageElement = document.querySelector(\".popup_type_image\");\nvar popupCaption = document.querySelector(\".popup__caption\");\n\n//forms\nvar formEditProfile = document.forms[\"edit-profile\"];\nvar formAddCard = document.forms[\"new-place\"];\nvar formAvatarEdit = document.forms[\"edit-avatar\"];\n\n//inputs\nvar nameInput = formEditProfile.elements.name;\nvar descriptionInput = formEditProfile.elements.description;\nvar cardLinkInput = formAddCard.elements.link;\nvar cardNameInput = formAddCard.elements[\"place-name\"];\nvar avatarInput = formAvatarEdit.elements.link;\n\n// other\nvar placesList = document.querySelector(\".places__list\");\nvar cardTemplate = document.querySelector(\"#card-template\").content;\nvar validationConfig = {\n  formSelector: \".popup__form\",\n  inputSelector: \".popup__input\",\n  submitButtonSelector: \".popup__button\",\n  inactiveButtonClass: \"popup__button_disabled\",\n  inputErrorClass: \"popup__input_type_error\",\n  errorClass: \"popup__error_visible\"\n};\nvar userId = null;\n\n// Function renderCard\n\nfunction renderCard(cardData, userId, handleLikeClick) {\n  var cardElement = createCard(cardData, userId, handleDeleteCard, handleCardClick, handleLikeClick,\n  // передаем колбэк лайка\n  cardTemplate);\n  placesList.prepend(cardElement);\n}\n\n//Функция для открытия карточки\nfunction handleCardClick(link, name) {\n  var popupImage = popupImageElement.querySelector(\".popup__image\");\n  popupImage.src = link;\n  popupImage.alt = name;\n  popupCaption.textContent = name;\n  openModal(popupImageElement);\n}\n// // Функция для удаления карточки\n\nfunction handleDeleteCard(cardElement, cardId) {\n  deleteCard(cardId).then(function () {\n    cardElement.remove();\n  }).catch(function (error) {\n    console.error(\"Ошибка при удалении карточки:\", error);\n  });\n}\nfunction initializePage() {\n  Promise.all([getInitialCards(), getUserInfo()]).then(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      cards = _ref2[0],\n      userData = _ref2[1];\n    profileTitle.textContent = userData.name;\n    profileDescription.textContent = userData.about;\n    profileImage.style.backgroundImage = \"url(\".concat(userData.avatar, \")\");\n    userId = userData._id;\n    cards.forEach(function (cardData) {\n      renderCard(cardData, userId, handleLikeClick); // передаем колбэк лайка при создании\n    });\n  }).catch(function (error) {\n    console.error(\"Ошибка инициализации страницы:\", error);\n  });\n}\n\n// Функция обработчик лайка\nfunction handleLikeClick(cardId, isLiked, likeButton, likeCountElement) {\n  toggleLike(cardId, isLiked) // Передаем текущее состояние лайка\n  .then(function (data) {\n    likeCountElement.textContent = data.likes.length; // Обновляем счетчик лайков\n    likeButton.classList.toggle(\"card__like-button_is-active\"); // Переключаем класс\n  }).catch(function (err) {\n    console.log(err);\n  });\n}\n\n// Функция для редактирования профиля\nfunction handleProfileEditSubmit(evt) {\n  evt.preventDefault();\n  var nameValue = nameInput.value;\n  var descriptionValue = descriptionInput.value;\n  updateUserInfo(nameValue, descriptionValue).then(function (updatedUserInfo) {\n    profileTitle.textContent = updatedUserInfo.name;\n    profileDescription.textContent = updatedUserInfo.about;\n    closeModal(popupEditProfile);\n  }).catch(function (error) {\n    console.error(\"Ошибка при редактировании профиля:\", error);\n  });\n}\n\n// Функция для добавления карточки\nfunction handleAddCardSubmit(evt) {\n  evt.preventDefault();\n  var linkValue = cardLinkInput.value;\n  var nameValue = cardNameInput.value;\n  addCard(nameValue, linkValue).then(function (newCard) {\n    renderCard(newCard, userId, handleLikeClick); //  передаем колбэк лайка\n    closeModal(popupAddCard);\n    formAddCard.reset();\n  }).catch(function (error) {\n    console.error(\"Ошибка при добавлении карточки:\", error);\n  });\n}\n\n// Функция для обновления аватара\nfunction handleAvatarEditSubmit(evt) {\n  evt.preventDefault();\n  var avatarValue = avatarInput.value;\n  updateAvatar(avatarValue).then(function (updatedUserInfo) {\n    profileImage.style.backgroundImage = \"url(\".concat(updatedUserInfo.avatar, \")\");\n    closeModal(popupEditAvatar);\n    formAvatarEdit.reset();\n  }).catch(function (error) {\n    console.error(\"Ошибка при обновлении аватара:\", error);\n  });\n}\n\n// Обновление аватара\nprofileImage.addEventListener(\"click\", function () {\n  openModal(popupEditAvatar);\n  resetValidation(formAvatarEdit, validationConfig);\n});\n\n// Обработчик отправки формы редактирования аватара\nformAvatarEdit.addEventListener(\"submit\", handleAvatarEditSubmit);\n\n// Обработчик отправки формы редактирования профиля\nformEditProfile.addEventListener(\"submit\", handleProfileEditSubmit);\n\n// Обработчик отправки формы добавления карточки\nformAddCard.addEventListener(\"submit\", handleAddCardSubmit);\n\n//Редактирование профиля\nprofileEditButton.addEventListener(\"click\", function () {\n  openModal(popupEditProfile);\n  nameInput.value = profileTitle.textContent;\n  descriptionInput.value = profileDescription.textContent;\n  resetValidation(formEditProfile, validationConfig);\n});\n\n//Добавление карточки\nprofileAddButton.addEventListener(\"click\", function () {\n  openModal(popupAddCard);\n  resetValidation(formAddCard, validationConfig);\n});\n\n//закрытие модалок по крестику и оверлею\nvar popups = document.querySelectorAll(\".popup\");\npopups.forEach(function (popup) {\n  popup.addEventListener(\"mousedown\", function (evt) {\n    if (evt.target.classList.contains(\"popup_opened\") || evt.target.classList.contains(\"popup__close\")) {\n      closeModal(popup);\n    }\n  });\n});\nenableValidation(validationConfig);\ninitializePage();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///674\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[674]();
/******/ 	
/******/ })()
;